"""
1.堆和栈
内存区域中分堆区和栈区：栈区间的内存的开辟和释放都是系统自动的，堆区间的内存是手动开辟的，手动释放的
内存的管理管理的是堆区间的内存

2.数据的存储
a.python中所有的数据都是对象，都是保存在堆中的
b.python中的所有变量存储的都是存在堆中的数据地址。存了对象的地址的变量又叫对象的引用
c.默认情况下，创建对象就会在堆区间开辟空间，存储数据，并且将地址返回；如果对象是数字或者字符串
不会直接开辟空间，会做缓存，每次使用的时候会先去缓存区中看之前有没有存储过，如果有就直接返回之前数据的地址，没有才开辟新的空间，存储数据

3.数据的销毁
python中通过"垃圾回收机制"来管理内存的释放
原理：看一个对象是否销毁，就看这个对象的引用计数，是否为零，不为零就不销毁
引用计数：对象的引用个数
注意：系统不会时时刻刻检查对象的引用计数是否是零，而是隔一段时间，检测一次，如果检测到垃圾就回收
"""
from sys import getrefcount
"""
getrefcount(对象)- 获取指定对象的引用计数
"""
#1.增加引用计数：使用变量存对象的地址
list1 =[1] #对象[1]的引用计数1
list2 =list1 #对象[1]的引用计数2
list3 =[list1,100]#对象[1]的引用计数3
print(getrefcount(list1))
#2.减少引用计数
"""
a.删除引用
b.让当前对象的引用成为别的对象的引用

"""
print(getrefcount(50))